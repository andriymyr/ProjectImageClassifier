Завдання:
Студентам пропонується реалізувати веб-сервіс, що класифікує зображення з використанням згорткових нейронних мереж. 

Завантажте та ознайомтесь з датасетом https://www.kaggle.com/c/cifar-10. У ньому ви знайдете 60000 кольорових зображень розміром 32x32, розбитих на 10 класів по 6000 прикладів на клас. Створіть та навчіть згорткову нейронну мережу, здатну віднести передане їй зображення до одного з 10 класів, запропонованих у датасеті. Вам належить самостійно підібрати архітектуру нейронної мережі, а саме: кількість згорткових шарів, кількість нейронів у повнозв'язному шарі, активаційні функції, гіперпараметри тощо. Намагайтеся отримати якомога більшу точність класифікації. Для цього використовуйте розглянуте на заняттях розширення навчальної множини, перевикористання та донавчання нейронних мереж (наприклад VGG16 або будь-якої іншої).

Напишіть веб-інтерфейс у зручному Python-фреймворку, за допомогою якого користувач зможе завантажити зображення, а у відповіді отримати назву одного з 10 запропонованих в датасеті класів.
За бажанням працюючий проект можна завантажити на heroku, aws, gcp, azure або будь-яку іншу хмарну платформу.

Критерії прийому
Проєкт має бути збережений в окремому репозиторії та бути загальнодоступним (GitHub, GitLab або BitBucket).
Навчена нейронна мережа має бути збережена у репозиторії проєкту.
Проєкт повинен містити короткий опис архітектури нейромережі, які способи тюнінгу були використані при навчанні, а також графіки втрат та точності, побудовані на тренувальних, тестових та валідаційних даних.
Проєкт повинен містити докладну інструкцію щодо встановлення та використання.
Необхідно реалізувати веб-інтерфейс.
Програма має бути контейнеризована в Docker, а образ завантажений на dockerhub.
Створення Dockerfile:  Розробіть Dockerfile для створення образу Docker, який дозволить розміщувати та запускати нашу програму в контейнеризованому середовищі. Dockerfile має включати всі необхідні інструкції для створення образу, включаючи вибір базового образу, копіювання вихідного коду програми до контейнера, встановлення необхідних залежностей та визначення команди для запуску програми.
Використання Docker Compose:  Інтегруйте інструмент Docker Compose для спрощення процесу розгортання та управління нашим проектом у середовищі Docker. Створіть файл docker-compose.yml, який описує послуги, мережі та томи, необхідні для проекту. Файл повинен дозволяти запускати весь проект за допомогою однієї команди docker-compose up, автоматизуючи створення та запуск необхідних Docker контейнерів.

P.S.: Ви можете розширити функціонал проєкту на свій розсуд обов'язково проконсультувавшись з ментором перед цим. Розглядайте цей проєкт, як частину вашого портфоліо і корисний вам інструмент. З цієї причини ініціатива у розширенні та доповненні вимог до проєкту вітається.
